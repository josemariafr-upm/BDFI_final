version: "3.5"
services:

  ##########################
  ####### ZK + KAFKA #######
  ##########################

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - bdfinet
  
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "flight_delay_classification_request:1:1,flight_delay_classification_response:1:1"
    networks:
      - bdfinet
  
  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - 8088:8080
  #   depends_on:
  #     kafka:
  #       condition: service_completed_succesfully
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=kafka
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - DYNAMIC_CONFIG_ENABLED=true

  #########################
  ####### CASSANDRA #######
  #########################

  cassandra:
    image: bitnami/cassandra
    container_name: cassandra
    ports:
      - 9042:9042
      - 7000:7000
      - 7001:7001
      - 7199:7199
    environment:
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    networks:
      - bdfinet
    volumes:
      - ./cassandra/create_prediction_table.cql:/docker-entrypoint-initdb.d/create_prediction_table.cql
    
  #####################
  ####### MONGO #######
  #####################

  mongodb:
    image: josemariafrupm/mongodb-bdfi
    container_name: mongodb
    networks:
      - bdfinet
    ports:
      - 27017:27017
      
  #####################
  ####### SPARK #######
  #####################
  
  proxy:
    image: node:18-alpine
    container_name: proxy
    command: "node /client/proxy.js"
    ports: 
      - "3000:3000"
    volumes:
      - ../client:/client
    networks:
      - bdfinet
  
  ##################
  ## SPARK MASTER ##
  ##################
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "7077:7077"
      - "9001:9001"
      - "8080:8080"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-master"
      - "SERVER=proxy"
    volumes:
      - ../../BDFI_final:/BDFI_final
      #- ../flight_prediction:/flight_prediction
      #- ../../flight_prediction:/flight_prediction
    networks:
      - bdfinet
    depends_on:
      proxy:
        condition: service_started
      mongodb:
        condition: service_started
      cassandra:
        condition: service_started
      kafka:
        condition: service_started
  
  ####################
  ## SPARK WORKER 1 ##
  ####################
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-worker"
      - "SERVER=proxy"
    volumes:
      - ../../BDFI_final:/BDFI_final
    networks:
      - bdfinet

  ####################
  ## SPARK WORKER 2 ##
  ####################
  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==spark-master"
      - "SERVER=proxy"
    volumes:
      - ../../BDFI_final:/BDFI_final
    networks:
      - bdfinet
  
  ##################
  ## SPARK SUBMIT ##
  ##################
  spark-submit:
    image: bde2020/spark-submit:3.3.0-hadoop3.3
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
    ports:
      - "4040:4040"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==spark-master"
      - "SERVER=proxy"
    command: 
      - bash 
      - -c
      - |
        echo "Waiting 1 minute to cassandra" && sleep 10
        echo "50 seconds" && sleep 10
        echo "40 seconds" && sleep 10
        echo "30 seconds" && sleep 10
        echo "20 seconds" && sleep 10
        echo "10 seconds" && sleep 5
        echo "5" && sleep 1
        echo "4" && sleep 1
        echo "3" && sleep 1
        echo "2" && sleep 1
        echo "1" && sleep 1
        echo "Executing spark-submit"
        /spark/bin/spark-submit --class es.upm.dit.ging.predictor.MakePrediction --master  spark://spark-master:7077 --packages org.mongodb.spark:mongo-spark-connector_2.12:10.1.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0,com.datastax.spark:spark-cassandra-connector_2.12:3.3.0,com.github.jnr:jnr-posix:3.1.18 BDFI_final/flight_prediction/target/scala-2.12/flight_prediction_2.12-0.1.jar
    volumes:
      - ../../BDFI_final:/BDFI_final
    networks:
      - bdfinet
  
  #####################
  ####### FLASK #######
  #####################

  flask:
    image: josemariafrupm/flask-bdfi
    container_name: flask
    environment:
      - PROJECT_HOME=/BDFI_final
    networks:
      - bdfinet
    ports:
      - 5000:5000
      - 5001:5001
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
    volumes:
      - ../../BDFI_final:/BDFI_final
    command: 
      - bash
      - -c 
      - |
        echo "Waiting some time to spark-submit (2 minutes)" && sleep 60
        echo "60 seconds" && sleep 10
        echo "50 seconds" && sleep 10
        echo "40 seconds" && sleep 10
        echo "30 seconds" && sleep 10
        echo "20 seconds" && sleep 10
        echo "10 seconds" && sleep 5
        echo "5" && sleep 1
        echo "4" && sleep 1
        echo "3" && sleep 1
        echo "2" && sleep 1
        echo "1" && sleep 1
        cd /BDFI_final/resources/web
        python3 predict_flask.py
    
networks:
  bdfinet:
    driver : bridge
