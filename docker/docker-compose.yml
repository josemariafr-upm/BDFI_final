version: "3.5"
services:

  ##########################
  ####### ZK + KAFKA #######
  ##########################

  zookeeper:
  image: bitnami/zookeeper
  container_name: zookeeper
  ports:
      - "2181:2181"
  environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
  networks:
      - bdfinet
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    networks:
      - bdfinet
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    command: bash -c "/opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic flight_delay_classification_request" #No se si funcionar√≠a
    #command: bash -c "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"

  #########################
  ####### CASSANDRA #######
  #########################

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      -9042:9042
    networks:
      - bdfinet
  cqlsh:
    image: josemariafrupm/cqlsh-bdfi
    container_name: cqlsh
    networks:
      - bdfinet
    environment:
      - CQLSH_HOST=cassandra
      - CQLSH_PORT=9042
      - CQLVERSION=3.4.6
    depends_on:
      cassandra:
        condition: service_started
  
  #####################
  ####### MONGO #######
  #####################

  mongodb:
    image: josemariafrupm/mongodb-bdfi
    container_name: mongodb
    networks:
      - bdfinet
    ports:
      -27017:27017

  #####################
  ####### SPARK #######
  #####################

  ## SPARK MASTER
  spark-master:
    image: bde2020/spark-master:3.2.1-hadoop3.2
    container_name: spark-master
    ports:
      - "7077:7077"
      - "9001:9001"
      - "8080:8080"
    environment:
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-master"
      - "SERVER=${SERVER}"
    volumes:
      - ../../flight_prediction:/flight_prediction
    networks:
      - bdfinet
  ## SPARK WORKER 1
  spark-worker-1:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-worker"
      - "SERVER=${SERVER}"
    volumes:
      - ./flight_prediction:/flight_prediction
    networks:
      - bdfinet
  ## SPARK WORKER 2
  spark-worker-2:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "constraint:node==spark-master"
      - "SERVER=${SERVER}"
    volumes:
      - ../../flight_prediction:/flight_prediction
    networks:
      - bdfinet
  ## SPARK SUBMIT
  spark-submit:
    image: bde2020/spark-submit:3.2.1-hadoop3.2
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - zookeeper
      - mongodb
    ports:
      - "4040:4040"
    environment:
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "constraint:node==spark-master"
      - "SERVER=${SERVER}"
    command: bash -c "sleep 15; /spark/bin/spark-submit --class es.upm.dit.ging.predictor.MakePrediction --master  spark://spark-master:7077 --packages org.mongodb.spark:mongo-spark-connector_2.12:10.1.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0 flight_prediction/target/scala-2.12/flight_prediction_2.12-0.1.jar"
    volumes:
      - ../../flight_prediction:/flight_prediction
    networks:
      - bdfinet
  
  #####################
  ####### FLASK #######
  #####################

  flask:
    image: josemariafrupm/flask-bdfi
    container_name: flask
    networks:
      - bdfinet
    depends_on:
      - zookeeper
      - kafka
      - mongodb
      - cassandra
      - spark-submit
    command: bash -c "python3 /bdfi/practica_creativa/resources/web/predict-flask.py"
